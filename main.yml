- hosts: localhost
  connection: local
  tasks:
    - name: create vpc
      ec2_vpc_net:
          name: "hw4_ansible"
          cidr_block: "172.11.0.0/16"
          region: "{{ region }}"
          state: present
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
      register: create

    - name: create IGW
      ec2_vpc_igw:
         vpc_id: "{{ create.vpc.id }}"
         region: "{{ region }}"
         aws_access_key: "{{ aws_access_key }}"
         aws_secret_key: "{{ aws_secret_key }}"
         state: "present"
         tags:
            Name: "hw4_gtw"
      register: igw

    - name: create public subnet
      ec2_vpc_subnet:
          state: present
          vpc_id: "{{ create.vpc.id }}"
          region: "{{ region }}"
          cidr: "172.11.0.0/24"
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          map_public: yes
          resource_tags:
             Name: "hw4_ansible_subnet"
      register: sub
    - name: Route IGW
      ec2_vpc_route_table:
          vpc_id: "{{ create.vpc.id }}"
          region: "{{ region }}"
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          subnets:
            - "{{ sub.subnet.id }}"
          routes:
            - dest: 0.0.0.0/0
              
          tags:
            Name: "hw4_route_table"

    - name: Create Security Group
      ec2_group:
         name: hw4-sg
         description: hw4 Security Group
         vpc_id: "{{ create.vpc.id }}"
         region: "{{ region }}"
         aws_access_key: "{{ aws_access_key }}"
         aws_secret_key: "{{ aws_secret_key }}"
         rules:
            - proto: tcp
              ports:
              - 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              ports:
              - 22
              cidr_ip: 0.0.0.0/0
      register: securityG
     
    - name: create a new ec2 key pair
      ec2_key:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: ec2_keypair
        region: "{{ region }}"
      register: keypair

    - name: Copy EC2 Private Key locally so it can be later on used to SSH into the instance
      copy: content="{{ keypair.key.private_key }}" dest=.ssh/key.ppk
      when: keypair.changed == true

    - name: Create EC2 server
      ec2:
        image: ami-0a8e758f5e873d1c1
        wait: yes
        instance_type: t2.micro
        region: "{{ region }}"
        group_id: "{{ securityG.group_id }}"
        vpc_subnet_id: "{{ sub.subnet.id }}"
        key_name: "{{ keypair.key.name }}"
        user_data: "#!/bin/bash \n sudo apt-get update \n sudo apt-get install -y docker.io  \n sudo docker run --name some-nginx -v /some/content:/usr/share/nginx/html:ro -d nginx \n "
        count_tag:
          Name: hw4Server
        exact_count: 1
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}" 



 
